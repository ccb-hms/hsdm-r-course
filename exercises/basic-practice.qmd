---
title: "Basic Practice"
author: "Center for Computational Biomedicine"
format: 
  html: default
code-annotations: select
---

## Set 1: Complete by September 8

Please try to complete the following problems and email your solutions to Chris at [christopher_magnano@hms.harvard.edu](christopher_magnano@hms.harvard.edu). It is okay if you are not able to complete the exercises, you may also email Chris whatever you are able to complete within an hour. 

1. What will the `class` and values in `vec1` to `vec4` be after the following lines of code? Try to figure it out without running the code, then check your work:

```{r, eval=FALSE}
vec1 <- c("4", T, F, F)
vec2 <- c(9, "banana", 16, "apple")
vec3 <- c(TRUE + TRUE, TRUE, FALSE, TRUE)
vec4 <- c(3**2, 19%%2)
```

2. Write an R command or set of commands to make the `vec1` vector twice as large and contain all of the values of the original vector twice. 

For example, using this command `[1,2,3]` should become `[1,2,3,1,2,3]`, `["a"]` should become `["a", "a"]`, and `[2,3,1,2,1]` should become `[2,3,1,2,1,2,3,1,2,1]`.

3. For this problem you will need to load in the `nhanes` example data and, if desired, load the `tidyverse` package. 

```{r, eval=FALSE}
library(tidyverse)

nhanes <- read.csv("https://raw.githubusercontent.com/ccb-hms/hsdm-r-course/main/session-materials/session0/session0Data.csv")
``` 

a. Calculate the mean plasma glucose in the `nhanes` dataset, ignoring missing values. 

b. Create a `dataframe` or `tibble`, `nhanes_mean_filled`, where all missing plasma glucose values in `nhanes` have been replaced by the mean value calculated in part a. 
*Hint: Check out the `replace_na` function, you can find [its documentation here](https://tidyr.tidyverse.org/reference/replace_na.html).*


## Set 2: Due September 22

Start by loading `tidyverse` and reading in the `nhanes` example data from the bootcamp:

```{r, eval=FALSE}
library(tidyverse)

nhanes <- read_csv("https://raw.githubusercontent.com/ccb-hms/hsdm-r-course/main/session-materials/session0/session0Data.csv")
``` 

1. The `dyplr` package, a part of the `tidyverse` set of packages, contains an `arrange` function. 

a. What does the `arrange` function do?
b. What is the `arrange` function's default behavior towards `NA` values? 

*Hint: Recall that you can look up information on a function with the command `?function`.*

2. Sort `nhanes` by BMI from lowest to highest and store the result in a new variable, `nhanes_sorted`. 

3. Add an additional column to `nhanes_sorted` called `bmi_rank` which contains each participant's BMI rank, meaning that the value for the lowest BMI would be 1, the second lowest BMI would be 2, etc. all the way up to the highest BMI. Don't worry about ties or preserving the original order of the data.

*Hint: You might want to use the `seq` function or colon notation (`1:num`) to generate a sequence of numbers for the new column.*
	

